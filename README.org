* A Personal Emacs Configuration
This is my personal Emacs configuration, continually used and tweaked since 2020, and I am always trying to make it same behaviour on my Windows and macOS.

* Table of Content                                                              :noexport:TOC_4:
- [[#a-personal-emacs-configuration][A Personal Emacs Configuration]]
- [[#usage][Usage]]
- [[#setup][Setup]]
  - [[#key-bindings][Key Bindings]]
- [[#the-dependencies][The Dependencies]]
  - [[#flycheck][Flycheck]]
    - [[#python][Python]]
    - [[#shell][Shell]]
    - [[#yaml][YAML]]
  - [[#for-windows-platform-specifics][For Windows Platform Specifics]]
    - [[#aspell][Aspell]]
  - [[#for-macos-platform-specifics][For macOS Platform Specifics]]
    - [[#aspell-1][Aspell]]
- [[#windows-platform-portable-software-integration][Windows Platform: Portable Software Integration]]
  - [[#flycheck-1][Flycheck]]
    - [[#portable-python---winpython][Portable Python - WinPython]]
      - [[#python-flake8][python-flake8]]
      - [[#yaml-yamllint][yaml-yamllint]]
    - [[#portable-binary-file][Portable Binary File]]
      - [[#shellcheck][ShellCheck]]
  - [[#winpython][WinPython]]

* Usage
TODO
* Setup
Basically, following the [[#the-dependencies][The Dependencies]] section is enough to set up.

If you're a big fan of [[//haikebang.com/secure-portable.html][Portable Software on Windows Platform]] like me, please
refer to [[#windows-platform-portable-software-integration][Windows Platform: Portable Software Integration]].
** Key Bindings
Key Bindings are managed by [[https://github.com/noctuid/general.el][general.el]], and the bindings configuration can be
found from [[https://github.com/jsntn/emacs.d/blob/master/lisp/init-keybindings.el][here]].
* The Dependencies
** Flycheck
*** Python
I use =python-flake8= as Python checker, refer to =requirements.txt=.
*** Shell
I use =sh-shellcheck= as Shell checker, refer to this [[https://github.com/koalaman/shellcheck/][link]] for installation.
*** YAML
I use =yaml-yamllint= as YAML checker, refer to =requirements.txt=.
** For Windows Platform Specifics
*** Aspell
I use [[//www.msys2.org][MSYS2]] for =aspell= implementation.

1. Search =aspell= on MingW64 terminal,
   #+BEGIN_SRC shell
   $ pacman -Ss aspell
   #+END_SRC
2. Installing =aspell= and dictionary you need,
   #+BEGIN_SRC shell
   $ pacman -S mingw64/mingw-w64-x86_64-aspell
   $ pacman -S mingw64/mingw-w64-x86_64-aspell-en
   #+END_SRC
3. Find =aspell.exe= location with =which aspell=, e.g. =C:\msys64\mingw64\bin=
4. Be sure the =aspell.exe= executable binary file can be found from Emacs,
   #+BEGIN_SRC lisp
   (executable-find "aspell")
   #+END_SRC

   Otherwise, it can be done by updating the Emacs configuration,
   #+BEGIN_SRC lisp
   (add-to-list 'exec-path "C:/msys64/mingw64/bin/")
   #+END_SRC
** For macOS Platform Specifics
*** Aspell
Use below command to install =aspell=,

#+BEGIN_SRC shell
brew install aspell
#+END_SRC

or

#+BEGIN_SRC shell
brew install --build-from-source aspell
#+END_SRC
* Windows Platform: Portable Software Integration
** Flycheck
*** Portable Python - WinPython
For the packages are installed in a portable Python like [[#winpython][WinPython]], executable
paths should be configured manually.
**** python-flake8
I.e.,
#+BEGIN_SRC lisp
(setq flycheck-python-flake8-executable "V:/WPy32-3810/python-3.8.1/Scripts/flake8.exe")
#+END_SRC
**** yaml-yamllint
I.e.,
#+BEGIN_SRC lisp
(setq flycheck-yaml-yamllint-executable "V:/WPy32-3810/python-3.8.1/Scripts/yamllint.exe")
#+END_SRC
*** Portable Binary File
**** ShellCheck
If ShellCheck is installed with pre-compiled binary file, configure the
executable path, take =V:/bin/shellcheck.exe= as example,

#+BEGIN_SRC lisp
(setq flycheck-sh-shellcheck-executable "V:/bin/shellcheck.exe")
#+END_SRC
** [[//winpython.github.io][WinPython]]
WinPython is a portable distribution of the Python programming language for
Windows.
