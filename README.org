* A Personal Emacs Configuration
This is my personal Emacs configuration, continually used and tweaked since
2020, and I am always trying to make it same behaviour on my Windows and macOS.

* Table of Content                                                              :noexport:TOC_4:
- [[#a-personal-emacs-configuration][A Personal Emacs Configuration]]
- [[#usage][Usage]]
- [[#setup][Setup]]
  - [[#key-bindings][Key Bindings]]
- [[#the-dependencies][The Dependencies]]
  - [[#flycheck][Flycheck]]
    - [[#python][Python]]
    - [[#shell][Shell]]
    - [[#yaml][YAML]]
  - [[#for-windows-platform-specifics][For Windows Platform Specifics]]
    - [[#use-msys2-to-manage-aspell][Use MSYS2 to Manage Aspell]]
    - [[#use-scoop-to-manage-other-apps][Use Scoop to Manage Other Apps]]
  - [[#for-macos-platform-specifics][For macOS Platform Specifics]]
- [[#windows-platform-portable-software-integration][Windows Platform: Portable Software Integration]]
  - [[#flycheck-1][Flycheck]]
    - [[#portable-python---winpython][Portable Python - WinPython]]
      - [[#python-flake8][python-flake8]]
      - [[#yaml-yamllint][yaml-yamllint]]
  - [[#winpython][WinPython]]
- [[#known-issue][Known Issue]]

* Usage
TODO
* Setup
Basically, following the [[#the-dependencies][The Dependencies]] section is enough to set up.

If you're a big fan of [[//haikebang.com/secure-portable.html][Portable Software on Windows Platform]] like me, please
refer to [[#windows-platform-portable-software-integration][Windows Platform: Portable Software Integration]].
** Key Bindings
Key Bindings are managed by [[https://github.com/noctuid/general.el][general.el]], and the bindings configuration can be
found from [[https://github.com/jsntn/emacs.d/blob/master/lisp/init-keybindings.el][here]].
* The Dependencies
** Flycheck
*** Python
I use =python-flake8= as Python checker, refer to =requirements.txt=.
*** Shell
I use =sh-shellcheck= as Shell checker, refer to this [[https://github.com/koalaman/shellcheck/][link]] for installation.
*** YAML
I use =yaml-yamllint= as YAML checker, refer to =requirements.txt=.
** For Windows Platform Specifics
*** Use MSYS2 to Manage Aspell
I use [[//www.msys2.org][MSYS2]] for =aspell= implementation.

1. Search =aspell= on MingW64 terminal,
   #+BEGIN_SRC shell
   $ pacman -Ss aspell
   #+END_SRC
2. Installing =aspell= and dictionary you need,
   #+BEGIN_SRC shell
   $ pacman -S mingw64/mingw-w64-x86_64-aspell
   $ pacman -S mingw64/mingw-w64-x86_64-aspell-en
   #+END_SRC
3. Find =aspell.exe= location with =which aspell=, e.g. =C:\msys64\mingw64\bin=
4. Be sure the =aspell.exe= executable binary file can be found from Emacs,
   #+BEGIN_SRC lisp
   (executable-find "aspell")
   #+END_SRC

   Otherwise, it can be done by updating the Emacs configuration,
   #+BEGIN_SRC lisp
   (add-to-list 'exec-path "C:/msys64/mingw64/bin/")
   #+END_SRC
*** Use Scoop to Manage Other Apps
I [[//jason.haikebang.com/posts/scoop/][started using Scoop]] to manage some of my apps, including,
- Prettier
  #+BEGIN_SRC powershell
  scoop install nodejs
  npm install -g prettier
  #+END_SRC
- ShellCheck
  #+BEGIN_SRC powershell
  scoop install shellcheck
  #+END_SRC
- shfmt
  #+BEGIN_SRC powershell
  scoop install shfmt
  #+END_SRC
** For macOS Platform Specifics
On macOS, I [[//jsntn.com/mac/2017/12/09/homebrew.html][use Homebrew]] to manage apps, including,
- Aspell
  #+BEGIN_SRC shell
  brew install aspell
  #+END_SRC
- ShellCheck
  #+BEGIN_SRC shell
  brew install shellcheck
  #+END_SRC
- shfmt
  #+BEGIN_SRC shell
  brew install shfmt
  #+END_SRC
* Windows Platform: Portable Software Integration
** Flycheck
*** Portable Python - WinPython
For the packages are installed in a portable Python like [[#winpython][WinPython]], executable
paths should be configured manually.
**** python-flake8
I.e.,
#+BEGIN_SRC lisp
(setq flycheck-python-flake8-executable "V:/WPy32-3810/python-3.8.1/Scripts/flake8.exe")
#+END_SRC
**** yaml-yamllint
I.e.,
#+BEGIN_SRC lisp
(setq flycheck-yaml-yamllint-executable "V:/WPy32-3810/python-3.8.1/Scripts/yamllint.exe")
#+END_SRC
** [[//winpython.github.io][WinPython]]
WinPython is a portable distribution of the Python programming language for
Windows.
* Known Issue
I use [[https://github.com/jwiegley/use-package][use-package]] to manage packages in [[https://github.com/jsntn/emacs.d/blob/master/lisp/init-packages.el][init-packages.el]].

However, it seems the hl-todo and org-bullets settings don't work if they are
configured in the init-packages.el, i.e., [[https://github.com/jsntn/emacs.d/commit/1e409e075024d72f2dc7520ada092b04b3012f48#diff-aeac2722d1b94adc236ce40df31d9cb7eb107e43b95c13c6c795e71044ec2c29L119-L138][link 1]] and [[https://github.com/jsntn/emacs.d/commit/1e409e075024d72f2dc7520ada092b04b3012f48#diff-aeac2722d1b94adc236ce40df31d9cb7eb107e43b95c13c6c795e71044ec2c29L150-L152][link 2]], but both of them
are effective if I move them to [[https://github.com/jsntn/emacs.d/commit/19e71501432f5b5ba36375ad711eb62a3fbe91d4#diff-54e03c0bf9c47228b3868e00ea21baade79013af33501ff53bbadbd26060a227R32-R35][init-display.el]] and my [[https://github.com/jsntn/emacs.d/blob/1e409e075024d72f2dc7520ada092b04b3012f48/init.el#L98][local-config.el]].
